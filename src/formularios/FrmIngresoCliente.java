/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import Entidades.Cliente;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate; 
import java.time.ZoneId;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Johanna Parrales
 */
public class FrmIngresoCliente extends javax.swing.JFrame {
    
     private boolean editar = false;
    
    /**
     * Creates new form FrmIngresoCliente
     */
    public FrmIngresoCliente() {
        initComponents();
        editar = false;
    }
    
    private Connection con;
    
      public FrmIngresoCliente(Cliente c) {
        initComponents();
        editar = true;
        tfCedula.setEnabled(!editar);
        tfCedula.setText(String.valueOf(c.getId()));
        tfNombre.setText(String.valueOf(c.getNombre()));
        tfApellido.setText(String.valueOf(c.getApellido()));
        tfDireccion.setText(String.valueOf(c.getDireccion()));
        tfTelefono.setText(String.valueOf(c.getTelefono()));
    }
    
      private void limpiarFormulario(){
        tfNombre.setText(null);
        tfCedula.setText(null);
        tfDireccion.setText(null);
        tfApellido.setText(null);
        tfTelefono.setText(null);
    }
      
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * 
     * 
     * 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lCedula = new javax.swing.JLabel();
        lNombre = new javax.swing.JLabel();
        lApellido = new javax.swing.JLabel();
        lDireccion = new javax.swing.JLabel();
        lTelefono = new javax.swing.JLabel();
        tfCedula = new javax.swing.JTextField();
        tfNombre = new javax.swing.JTextField();
        tfApellido = new javax.swing.JTextField();
        tfDireccion = new javax.swing.JTextField();
        tfTelefono = new javax.swing.JTextField();
        bIngresar = new javax.swing.JButton();
        bLIMPIAR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lCedula.setText("CEDULA");

        lNombre.setText("NOMBRE");

        lApellido.setText("APELLIDO");

        lDireccion.setText("DIRECCION");

        lTelefono.setText("TELEFONO");

        bIngresar.setText("INGRESAR");
        bIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bIngresarActionPerformed(evt);
            }
        });

        bLIMPIAR.setText("LIMPIAR");
        bLIMPIAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLIMPIARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lApellido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lCedula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfCedula)
                    .addComponent(tfApellido)
                    .addComponent(tfDireccion)
                    .addComponent(tfNombre)
                    .addComponent(tfTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(bIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(bLIMPIAR, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(tfCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bLIMPIAR, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(bIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bIngresarActionPerformed
        // TODO add your handling code here:
        if(ValidacionControles()){
            PreparedStatement st = null;
            try {
                LocalDate todayLocalDate;
                todayLocalDate = LocalDate.now( ZoneId.of( "America/Montreal" ) );

                Cliente c = new Cliente(tfCedula.getText(), tfNombre.getText(), 
                    tfApellido.getText(), tfDireccion.getText(),tfTelefono.getText());

                con = Conexion.Conexion.conectar();
                if (editar) {
                    st = con.prepareStatement("UPDATE cliente set nombre=?, apellido = ?, direccion=?, telefono=?  WHERE codigo = ?");  
                    st.setString(1, c.getNombre());
                    st.setString(2, c.getApellido());
                    st.setString(3, c.getDireccion());
                    st.setString(4,c.getTelefono());
                    st.setString(5, c.getId());
                    
                    st.executeUpdate();
                    
                    System.out.println("Actualizaci√≥n de cliente exitosa");                    
                    
                }else{                    
                    st = con.prepareStatement("INSERT INTO cliente(idclientes, codigo,nombre,apellido,direccion,telefono) VALUES(null,?,?,?,?,?) ");
                    st.setString(1, c.getId());
                    st.setString(2, c.getNombre());
                    st.setString(3, c.getApellido());
                    st.setString(4, c.getDireccion());
                    st.setString(5, c.getTelefono());
                    
                    st.executeUpdate();

                    System.out.println("Ingreso de cliente exitoso");                    
                   
                }
                limpiarFormulario();
                
                dispose();
            } catch (SQLException ex) {
                Logger.getLogger(FrmIngresoCliente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FrmIngresoCliente.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
                if (con!=null) {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmIngresarUsuario.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (st!=null) {
                    try{
                        st.close();
                    }catch (SQLException ex) {
                        Logger.getLogger(FrmIngresarUsuario.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_bIngresarActionPerformed

    private boolean ValidacionControles() {
        try {
            Integer.parseInt(tfCedula.getText());            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                "La c√©dula debe tener valores v√°lidos",
                "Ingresar",
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if (tfNombre.getText().isEmpty() || tfApellido.getText().isEmpty() || tfDireccion.getText().isEmpty() || tfTelefono.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "El formulario tiene valores no v√°lidos",
                "Ingresar",
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return clienteValido(tfCedula.getText()); //verifica que no se haya ingresado un producto con el mismo codigo en la base de datos
    }

    /*
    funcion que verifica que no se ingrese un producto con el mismo codigo, retorna true en caso de que no exista un producto de igual codigo
    @_codigo: codigo del producto 
    */
    private boolean clienteValido(String _id) {        
        if (!editar) {
            ResultSet rs=null;                       
            PreparedStatement st=null;
            try
            {   
                con = Conexion.Conexion.conectar();
                st = con.prepareStatement("SELECT * FROM cliente WHERE codigo = ?");            
                st.setString(1,_id);    
                rs = st.executeQuery(); 
                if(rs.next()){
                    JOptionPane.showMessageDialog(this,
                        "Existe un cliente con la misma cedula",
                        "Ingresar",
                        JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                return true;
            }        
            catch(Exception e){
                    JOptionPane.showMessageDialog(this,
                        "Error en la consulta de cliente. (Validacion) \n" + e,
                        "Ingresar",
                        JOptionPane.ERROR_MESSAGE);          
                return false;
            } finally{
                if ( con!=null) {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmIngresarUsuario.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (st!=null) {
                    try{
                        st.close();
                    }catch (SQLException ex) {
                        Logger.getLogger(FrmIngresarUsuario.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                if (rs!= null) {
                    try{
                        rs.close();
                    }catch (SQLException ex) {
                        Logger.getLogger(FrmIngresarUsuario.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        return true;
    }

    
    
    private void bLIMPIARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLIMPIARActionPerformed
        // TODO add your handling code here:
        limpiarFormulario();
    }//GEN-LAST:event_bLIMPIARActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmIngresoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmIngresoCliente().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bIngresar;
    private javax.swing.JButton bLIMPIAR;
    private javax.swing.JLabel lApellido;
    private javax.swing.JLabel lCedula;
    private javax.swing.JLabel lDireccion;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lTelefono;
    private javax.swing.JTextField tfApellido;
    private javax.swing.JTextField tfCedula;
    private javax.swing.JTextField tfDireccion;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTelefono;
    // End of variables declaration//GEN-END:variables

}
